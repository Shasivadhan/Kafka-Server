package com.ksv.producer.kafka; import com.ksv.producer.domain.*; import org.apache.kafka.clients.producer.*; import org.apache.kafka.common.header.internals.*; import org.springframework.beans.factory.annotation.*; import org.springframework.kafka.core.*; import org.springframework.stereotype.*; import java.nio.charset.*; import java.util.*; @Service public class EventPublisher { private final KafkaTemplate<String,Object> template; @Value("${app.topics.ticket-created}") private String topic; public EventPublisher(KafkaTemplate<String,Object> t){ this.template=t;} public String publish(TicketCreatedEvent e){ String cid=UUID.randomUUID().toString(); String tid="trace-"+cid.substring(0,8); ProducerRecord<String,Object> r=new ProducerRecord<>(topic,e.customerId(),e); r.headers().add(new RecordHeader("eventVersion","v1".getBytes(StandardCharsets.UTF_8))).add(new RecordHeader("correlationId",cid.getBytes(StandardCharsets.UTF_8))).add(new RecordHeader("traceId",tid.getBytes(StandardCharsets.UTF_8))).add(new RecordHeader("priority",Integer.toString(e.priority()).getBytes(StandardCharsets.UTF_8))); template.send(r); return cid; } }